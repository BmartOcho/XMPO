import xml.etree.ElementTree as ET

# Load the XML file
tree = ET.parse('XML Files/J208819.xml')
root = tree.getroot()

for elem in root.iter():
    text = elem.text.strip() if elem.text and elem.text.strip() else "None"
    print(f"Tag: {elem.tag}, Text: {text}")

# Find all sections in the XML
print("\nSections found in the XML:")

sections = root.findall('.//Section')

for section in sections:
    finished_width = section.find('FinishedWidth')
    finished_height = section.find('FinishedHeight')
    imposition_width = section.find('ImpositionWidth')
    imposition_height = section.find('ImpositionHeight')
    pages = section.find('Pages')
    sheet_width = section.find('SheetWidth')
    sheet_depth = section.find('SheetDepth')
    NoAcross = section.find('NoAcross')
    NoAround = section.find('NoAround')
    Machine = section.find('Machine')
    ProcessReverse = section.find('ProcessReverse')
    ProcessFront = section.find('ProcessFront')
    StockThicknessValue = section.find('StockThicknessValue')
    AcrossX = section.find('AcrossX')
    AcrossY = section.find('AcrossY')
    SheetX = section.find('SheetX')
    SheetY = section.find('SheetY')
    PrintableX = section.find('PrintableX')
    PrintableY = section.find('PrintableY')
    SizeX = section.find('SizeX')
    SizeY = section.find('SizeY')
    BleedX = section.find('BleedX')
    GripX1 = section.find('GripX1')
    GripX2 = section.find('GripX2')
    GripY1 = section.find('GripY1')
    GripY2 = section.find('GripY2')
    IsWorkAndTurn = section.find('IsWorkAndTurn')
    IsWorkAndTumble = section.find('IsWorkAndTumble')
    print("Finished Width", finished_width.text if finished_width is not None else "No FinishedWidth")
    print("Finished Height", finished_height.text if finished_height is not None else "No FinishedHeight")
    print("Imposition Width", imposition_width.text if imposition_width is not None else "No ImpositionWidth")
    print("Imposition Height", imposition_height.text if imposition_height is not None else "No ImpositionHeight")
    print("Pages", pages.text if pages is not None else "No Pages")
    print("Sheet Width",sheet_width.text if sheet_width is not None else "No SheetWidth")
    print("Sheet Depth",sheet_depth.text if sheet_depth is not None else "No SheetDepth")
    print("Number Across", NoAcross.text if NoAcross is not None else "No NoAcross")
    print("Number Around", NoAround.text if NoAround is not None else "No NoAround")
    print("Machine", Machine.text if Machine is not None else "No Machine")
    print("Process Reverse", ProcessReverse.text if ProcessReverse is not None else "No ProcessReverse")
    print("Process Front",ProcessFront.text if ProcessFront is not None else "No ProcessFront") 
    print("Stock Thickness Value", StockThicknessValue.text if StockThicknessValue is not None else "No StockThicknessValue")
    print("Across X", AcrossX.text if AcrossX is not None else "No AcrossX")
    print("Across Y", AcrossY.text if AcrossY is not None else "No AcrossY")
    print("Sheet X",SheetX.text if SheetX is not None else "No SheetX")
    print("Sheet Y",SheetY.text if SheetY is not None else "No SheetY")
    print("Max Ink Coverage:X", PrintableX.text if PrintableX is not None else "No PrintableX")
    print("Max Ink Coverage:Y", PrintableY.text if PrintableY is not None else "No PrintableY")
    print("Size X", SizeX.text if SizeX is not None else "No SizeX")
    print("Size Y", SizeY.text if SizeY is not None else "No SizeY")
    print("Bleed X", BleedX.text if BleedX is not None else "No BleedX")
    print("Grip X1", GripX1.text if GripX1 is not None else "No GripX1")
    print("Grip X2", GripX2.text if GripX2 is not None else "No GripX2")
    print("Grip Y1", GripY1.text if GripY1 is not None else "No GripY1")
    print("Grip Y2", GripY2.text if GripY2 is not None else "No GripY2")
    print("Is Work And Turn", IsWorkAndTurn.text if IsWorkAndTurn is not None else "No IsWorkAndTurn")
    print("Is Work And Tumble", IsWorkAndTumble.text if IsWorkAndTumble is not None else "No IsWorkAndTumble")
    print("-----")
