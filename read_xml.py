import xml.etree.ElementTree as ET

tree = ET.parse('XML Files/J208819.xml')
root = tree.getroot()

sections = root.findall('.//Section')
#print(f"\nSections found: {len(sections)}\n")

for section in sections:
    # Extract basic section values
    fw = section.find('FinishedWidth')
    fh = section.find('FinishedHeight')
    iw = section.find('ImpositionWidth')
    ih = section.find('ImpositionHeight')
    pages = section.find('Pages')

    sw = section.find('SheetWidth')
    sd = section.find('SheetDepth')
    na = section.find('NoAcross')
    nar = section.find('NoAround')
    machine = section.find('Machine')
    pf = section.find('ProcessFront')
    pr = section.find('ProcessReverse')
    stv = section.find('StockThicknessValue')

    acrossx = section.find('AcrossX')
    acrossy = section.find('AcrossY')
    sheetx = section.find('SheetX')
    sheety = section.find('SheetY')
    px = section.find('PrintableX')
    py = section.find('PrintableY')
    sx = section.find('SizeX')
    sy = section.find('SizeY')
    bleed = section.find('Bleed')
    gx1 = section.find('GripX1')
    gx2 = section.find('GripX2')
    gy1 = section.find('GripY1')
    gy2 = section.find('GripY2')
    wturn = section.find('IsWorkAndTurn')
    wtumble = section.find('IsWorkAndTumble')

    print("====Finished Size Details====")
    print("Finished Width:", fw.text if fw is not None else "None")
    print("Finished Height:", fh.text if fh is not None else "None")
    print("Imposition Width:", iw.text if iw is not None else "None")
    print("Imposition Height:", ih.text if ih is not None else "None")
    print("Pages:", pages.text if pages is not None else "None")

    print("====Sheet Details====")
    print("Sheet Width:", sw.text if sw is not None else "None")
    print("Sheet Depth:", sd.text if sd is not None else "None")
    print("Across:", na.text if na is not None else "None",
          "Around:", nar.text if nar is not None else "None")
    print("Machine:", machine.text if machine is not None else "None")
    print("Process Front:", pf.text if pf is not None else "None")
    print("Process Reverse:", pr.text if pr is not None else "None")
    print("Stock Thickness:", stv.text if stv is not None else "None")

    print("====Imposition Details====")
    print("AcrossX:", acrossx.text if acrossx is not None else "None")
    print("AcrossY:", acrossy.text if acrossy is not None else "None")
    print("SheetX:", sheetx.text if sheetx is not None else "None")
    print("SheetY:", sheety.text if sheety is not None else "None")
    print("PrintableX/Y:", px.text if px is not None else "None", "/", py.text if py is not None else "None")
    print("SizeX/Y:", sx.text if sx is not None else "None", "/", sy.text if sy is not None else "None")
    print("Bleed:", bleed.text if bleed is not None else "None")
    print("GripX1/X2:", gx1.text if gx1 is not None else "None", "/", gx2.text if gx2 is not None else "None")
    print("GripY1/Y2:", gy1.text if gy1 is not None else "None", "/", gy2.text if gy2 is not None else "None")
    print("Work‑and‑Turn:", wturn.text if wturn is not None else "None")
    print("Work‑and‑Tumble:", wtumble.text if wtumble is not None else "None")
    print("-------------------\n")
